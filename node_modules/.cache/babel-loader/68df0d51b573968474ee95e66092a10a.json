{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell XPS\\\\Desktop\\\\react practise\\\\vaimo-task\\\\src\\\\components\\\\CountDownList\\\\CountDownList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CountDownList = () => {\n  _s();\n\n  const [time, setTime] = useState(\"\");\n  useEffect(() => {\n    let countdowndate = new Date(\"Nov 11,2021 06:34:00\").getTime(); //updating every second\n\n    let updatesecond = setInterval(function () {\n      //for today date and time\n      let todaydate = new Date(); //finding difference between now and countdays\n\n      let difference = countdowndate - todaydate;\n      let days = Math.floor(difference / (1000 * 60 * 60 * 24));\n      let hours = Math.floor(difference % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      let minutes = Math.floor(difference % (1000 * 60 * 60) / (1000 * 60));\n      let seconds = Math.floor(difference % (1000 * 60) / 1000);\n      setTime(days + \" days \" + hours + \" h \" + minutes + \" m \" + seconds + \" s \");\n\n      if (difference < 0) {\n        clearInterval(updatesecond);\n        setTime(\"Redirecting to your website\");\n      }\n    }, 1000);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: time\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CountDownList, \"gq0Ogp/SE+h348LRnzlENIgqpaY=\");\n\n_c = CountDownList;\nexport default CountDownList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDownList\");","map":{"version":3,"sources":["C:/Users/Dell XPS/Desktop/react practise/vaimo-task/src/components/CountDownList/CountDownList.js"],"names":["React","useState","useEffect","CountDownList","time","setTime","countdowndate","Date","getTime","updatesecond","setInterval","todaydate","difference","days","Math","floor","hours","minutes","seconds","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;;AAEA,MAAMC,aAAa,GAAG,MAAK;AAAA;;AAEvB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBJ,QAAQ,CAAC,EAAD,CAA/B;AACAC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAII,aAAa,GAAG,IAAIC,IAAJ,CAAS,sBAAT,EAAiCC,OAAjC,EAApB,CADU,CAEV;;AACA,QAAIC,YAAY,GAAGC,WAAW,CAAC,YAAU;AACrC;AACA,UAAIC,SAAS,GAAG,IAAIJ,IAAJ,EAAhB,CAFqC,CAGrC;;AACA,UAAIK,UAAU,GAAGN,aAAa,GAAGK,SAAjC;AAEA,UAAIE,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,UAAU,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAArB,CAAX;AACA,UAAII,KAAK,GAAGF,IAAI,CAACC,KAAL,CAAYH,UAAU,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAX,IAAwC,OAAO,EAAP,GAAY,EAApD,CAAX,CAAZ;AACA,UAAIK,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYH,UAAU,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAX,IAAmC,OAAO,EAA1C,CAAX,CAAd;AACA,UAAIM,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAYH,UAAU,IAAI,OAAO,EAAX,CAAX,GAA6B,IAAxC,CAAd;AACAP,MAAAA,OAAO,CAACQ,IAAI,GAAI,QAAR,GAAoBG,KAApB,GAA6B,KAA7B,GAAsCC,OAAtC,GAAgD,KAAhD,GAAwDC,OAAxD,GAAkE,KAAnE,CAAP;;AAEA,UAAGN,UAAU,GAAG,CAAhB,EAAkB;AACdO,QAAAA,aAAa,CAACV,YAAD,CAAb;AACAJ,QAAAA,OAAO,CAAC,6BAAD,CAAP;AACH;AACJ,KAhB6B,EAgB5B,IAhB4B,CAA9B;AAiBH,GApBQ,EAoBP,EApBO,CAAT;AAsBA,sBACI;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA9BD;;GAAMD,a;;KAAAA,a;AAkCN,eAAeA,aAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\r\n\r\nconst CountDownList = () =>{\r\n\r\n    const [time,setTime] = useState(\"\")\r\n    useEffect(()=>{\r\n        let countdowndate = new Date(\"Nov 11,2021 06:34:00\").getTime()\r\n        //updating every second\r\n        let updatesecond = setInterval(function(){\r\n            //for today date and time\r\n            let todaydate = new Date()\r\n            //finding difference between now and countdays\r\n            let difference = countdowndate - todaydate\r\n\r\n            let days = Math.floor(difference / (1000 * 60 * 60 * 24));\r\n            let hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n            let minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));\r\n            let seconds = Math.floor((difference % (1000 * 60)) / 1000);\r\n            setTime(days +  \" days \"  + hours +  \" h \"  + minutes + \" m \" + seconds + \" s \")\r\n        \r\n            if(difference < 0){\r\n                clearInterval(updatesecond)\r\n                setTime(\"Redirecting to your website\")\r\n            }\r\n        },1000)\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            {time}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CountDownList"]},"metadata":{},"sourceType":"module"}